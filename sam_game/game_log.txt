<NobleManager object> Func=load_file Args:(self=<NobleManager object>)(var_file=nobles_dictionary.json)(default={})
<NobleManager object> Func=load_instances Args:(self=<NobleManager object>)
<NobleInstance: "Ingrid Creely"> Func=__init__ Args:(self=<NobleInstance: "Ingrid Creely">)(noble_dict={'full_name': 'Ingrid Creely', 'relations': {'Rob Knobson': 2, 'Arthur Loftry': 8, 'Curly Preed': 1}, 'full_title': 'Duchess of London', 'death_message': "I shouldn't be dead!", 'honour': 5, 'surname': 'Creely', 'export_messages': [], 'nobility': 10, 'id': 100, 'extended_title': 'Ingrid Creely the six year old, Duchess of London', 'marked_for_death': False, 'gender': 'f', 'ram_status': None, 'happiness': 10, 'wealth': 4826})(noble_manager=<NobleManager object>)(log=<__main__.LogClass object at 0x7faf703fa588>)
<NobleInstance: "Rob Knobson"> Func=__init__ Args:(self=<NobleInstance: "Rob Knobson">)(noble_dict={'full_name': 'Rob Knobson', 'relations': {'Ingrid Creely': 1, 'Curly Preed': 2, 'Arthur Loftry': 3}, 'full_title': 'Count of most of Africa', 'death_message': "I shouldn't be dead!", 'honour': 5, 'surname': 'Knobson', 'export_messages': [], 'nobility': 9, 'id': 101, 'extended_title': 'Rob Knobson the solipsist, Count of most of Africa', 'marked_for_death': False, 'gender': 'm', 'ram_status': None, 'happiness': 9, 'wealth': 4826})(noble_manager=<NobleManager object>)(log=<__main__.LogClass object at 0x7faf703fa588>)
<NobleInstance: "Arthur Loftry"> Func=__init__ Args:(self=<NobleInstance: "Arthur Loftry">)(noble_dict={'full_name': 'Arthur Loftry', 'relations': {'Ingrid Creely': 1, 'Rob Knobson': 5, 'Curly Preed': 9}, 'full_title': 'Duke of Peebles', 'death_message': "I shouldn't be dead!", 'honour': 5, 'surname': 'Loftry', 'export_messages': [], 'nobility': 6, 'id': 103, 'extended_title': 'Arthur Loftry the undescribable, Duke of Peebles', 'marked_for_death': False, 'gender': 'm', 'ram_status': None, 'happiness': 10, 'wealth': 4826})(noble_manager=<NobleManager object>)(log=<__main__.LogClass object at 0x7faf703fa588>)
<NobleInstance: "Curly Preed"> Func=__init__ Args:(self=<NobleInstance: "Curly Preed">)(noble_dict={'full_name': 'Curly Preed', 'relations': {'Ingrid Creely': 5, 'Rob Knobson': 9, 'Arthur Loftry': 1}, 'full_title': "Baroness of the King's sock drawer", 'death_message': "I shouldn't be dead!", 'honour': 5, 'surname': 'Preed', 'export_messages': [], 'nobility': 7, 'id': 102, 'extended_title': "Curly Preed: kill streak (16) the murdertastic, Baroness of the King's sock drawer", 'marked_for_death': False, 'gender': 'f', 'ram_status': None, 'happiness': 10, 'wealth': 4826})(noble_manager=<NobleManager object>)(log=<__main__.LogClass object at 0x7faf703fa588>)
<NobleManager object> Func=load_id Args:(self=<NobleManager object>)
<NobleCreator instance> Func=load_names Args:(self=<NobleCreator instance>)
<NobleCreator instance> Func=__init__ Args:(self=<NobleCreator instance>)(NobleManager=<NobleManager object>)(noblenames_filename=noblenames.json)(log=<__main__.LogClass object at 0x7faf703fa588>)
<NobleManager object> Func=__init__ Args:(self=<NobleManager object>)(nobles_dictionary_filename=nobles_dictionary.json)(noblenames_filename=noblenames.json)(log=<__main__.LogClass object at 0x7faf703fa588>)
<Shire Creator Instance> Func=__init__ Args:(self=<Shire Creator Instance>)(kingdom_manager=<Kingdom Manager instance>)(log=<__main__.LogClass object at 0x7faf703fa588>)
<Kingdom Manager instance> Func=create_shire Args:(self=<Kingdom Manager instance>)
<Shire Creator Instance> Func=create_shire Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_appropriate_id Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_starting_population Args:(self=<Shire Creator Instance>)(food_production=4)(size=121)
<ShireInstance: Mongeshire> Func=refresh_dependant_stats Args:(self=<ShireInstance: Mongeshire>)
<ShireInstance: Mongeshire> Func=forecast_farming Args:(self=<ShireInstance: Mongeshire>)
<ShireInstance: Mongeshire> Func=forecast_stat Args:(self=<ShireInstance: Mongeshire>)(stat=2)(pop=15)
<ShireInstance: Mongeshire> Func=forecast_stat Args:(self=<ShireInstance: Mongeshire>)(stat=5)(pop=15)
<ShireInstance: Mongeshire> Func=forecast_stat Args:(self=<ShireInstance: Mongeshire>)(stat=2)(pop=15)
<ShireInstance: Mongeshire> Func=__init__ Args:(self=<ShireInstance: Mongeshire>)(kingdom_manager=<Kingdom Manager instance>)(shire_dict={'food_stores': 0, 'metal_percentage': 33, 'name': 'Mongeshire', 'wood_stores': 0, 'metal_stores': 0, 'coin_percentage': 33, 'population': 169, 'food_production': 4, 'manager': None, 'id': 100, 'coin_stores': 0, 'size_sqmiles': 121, 'metal_production': 2, 'wood_percentage': 33, 'wood_production': 5, 'specialisation': 'tools', 'coin_production': 2})(log=<__main__.LogClass object at 0x7faf703fa588>)
<Kingdom Manager instance> Func=view_shire Args:(self=<Kingdom Manager instance>)(shire_name=Mongeshire)
<ShireInstance: Mongeshire> Func=export_self Args:(self=<ShireInstance: Mongeshire>)
<Kingdom Manager instance> Func=create_shire Args:(self=<Kingdom Manager instance>)
<Shire Creator Instance> Func=create_shire Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_appropriate_id Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_starting_population Args:(self=<Shire Creator Instance>)(food_production=5)(size=768)
<ShireInstance: Shushshire> Func=refresh_dependant_stats Args:(self=<ShireInstance: Shushshire>)
<ShireInstance: Shushshire> Func=forecast_farming Args:(self=<ShireInstance: Shushshire>)
<ShireInstance: Shushshire> Func=forecast_stat Args:(self=<ShireInstance: Shushshire>)(stat=1)(pop=126)
<ShireInstance: Shushshire> Func=forecast_stat Args:(self=<ShireInstance: Shushshire>)(stat=3)(pop=126)
<ShireInstance: Shushshire> Func=forecast_stat Args:(self=<ShireInstance: Shushshire>)(stat=1)(pop=126)
<ShireInstance: Shushshire> Func=__init__ Args:(self=<ShireInstance: Shushshire>)(kingdom_manager=<Kingdom Manager instance>)(shire_dict={'food_stores': 0, 'metal_percentage': 33, 'name': 'Shushshire', 'wood_stores': 0, 'metal_stores': 0, 'coin_percentage': 33, 'population': 1152, 'food_production': 5, 'manager': None, 'id': 101, 'coin_stores': 0, 'size_sqmiles': 768, 'metal_production': 1, 'wood_percentage': 33, 'wood_production': 3, 'specialisation': 'shipyards', 'coin_production': 1})(log=<__main__.LogClass object at 0x7faf703fa588>)
<Kingdom Manager instance> Func=view_shire Args:(self=<Kingdom Manager instance>)(shire_name=Shushshire)
<ShireInstance: Shushshire> Func=export_self Args:(self=<ShireInstance: Shushshire>)
<ShireInstance: Mongeshire> Func=export_self Args:(self=<ShireInstance: Mongeshire>)
<Kingdom Manager instance> Func=create_shire Args:(self=<Kingdom Manager instance>)
<Shire Creator Instance> Func=create_shire Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_appropriate_id Args:(self=<Shire Creator Instance>)
<Shire Creator Instance> Func=find_starting_population Args:(self=<Shire Creator Instance>)(food_production=4)(size=365)
<ShireInstance: Grokkoshire> Func=refresh_dependant_stats Args:(self=<ShireInstance: Grokkoshire>)
<ShireInstance: Grokkoshire> Func=forecast_farming Args:(self=<ShireInstance: Grokkoshire>)
<ShireInstance: Grokkoshire> Func=forecast_stat Args:(self=<ShireInstance: Grokkoshire>)(stat=4)(pop=47)
<ShireInstance: Grokkoshire> Func=forecast_stat Args:(self=<ShireInstance: Grokkoshire>)(stat=4)(pop=47)
<ShireInstance: Grokkoshire> Func=forecast_stat Args:(self=<ShireInstance: Grokkoshire>)(stat=4)(pop=47)
<ShireInstance: Grokkoshire> Func=__init__ Args:(self=<ShireInstance: Grokkoshire>)(kingdom_manager=<Kingdom Manager instance>)(shire_dict={'food_stores': 0, 'metal_percentage': 33, 'name': 'Grokkoshire', 'wood_stores': 0, 'metal_stores': 0, 'coin_percentage': 33, 'population': 510, 'food_production': 4, 'manager': None, 'id': 102, 'coin_stores': 0, 'size_sqmiles': 365, 'metal_production': 4, 'wood_percentage': 33, 'wood_production': 4, 'specialisation': 'weapons', 'coin_production': 4})(log=<__main__.LogClass object at 0x7faf703fa588>)
<Kingdom Manager instance> Func=view_shire Args:(self=<Kingdom Manager instance>)(shire_name=Grokkoshire)
<ShireInstance: Shushshire> Func=export_self Args:(self=<ShireInstance: Shushshire>)
<ShireInstance: Grokkoshire> Func=export_self Args:(self=<ShireInstance: Grokkoshire>)
<ShireInstance: Mongeshire> Func=export_self Args:(self=<ShireInstance: Mongeshire>)
